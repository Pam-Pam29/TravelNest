import React, { useState, useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { 
  fetchAllUsers, 
  fetchAllBookings, 
  fetchAllPackages,
  fetchAnalytics
} from '../redux/actions/adminActions';
import { 
  FaUsers, 
  FaSuitcase, 
  FaChartLine, 
  FaCalendarCheck, 
  FaDollarSign, 
  FaBell, 
  FaCog,
  FaSearch,
  FaEllipsisV,
  FaFilter,
  FaCloudDownloadAlt,
  FaTrash,
  FaEdit,
  FaEye,
  FaCheck,
  FaTimes
} from 'react-icons/fa';
import { Line, Bar, Doughnut } from 'react-chartjs-2';

const AdminDashboard = () => {
  const dispatch = useDispatch();
  const { 
    users, 
    bookings, 
    packages, 
    analytics,
    loading 
  } = useSelector(state => state.admin);
  
  const [activeTab, setActiveTab] = useState('dashboard');
  const [period, setPeriod] = useState('month');
  const [searchTerm, setSearchTerm] = useState('');
  const [filterStatus, setFilterStatus] = useState('all');
  
  useEffect(() => {
    dispatch(fetchAllUsers());
    dispatch(fetchAllBookings());
    dispatch(fetchAllPackages());
    dispatch(fetchAnalytics(period));
  }, [dispatch, period]);

  const renderDashboardTab = () => {
    if (loading || !analytics) {
      return <div className="text-center py-8">Loading dashboard data...</div>;
    }
    
    const revenueData = {
      labels: analytics.revenue.map(item => item.date),
      datasets: [{
        label: 'Revenue',
        data: analytics.revenue.map(item => item.amount),
        borderColor: 'rgba(54, 162, 235, 1)',
        backgroundColor: 'rgba(54, 162, 235, 0.2)',
        fill: true,
        tension: 0.4
      }]
    };
    
    const bookingsData = {
      labels: analytics.bookingsByDestination.map(item => item.destination),
      datasets: [{
        label: 'Bookings',
        data: analytics.bookingsByDestination.map(item => item.count),
        backgroundColor: [
          'rgba(255, 99, 132, 0.6)',
          'rgba(54, 162, 235, 0.6)',
          'rgba(255, 206, 86, 0.6)',
          'rgba(75, 192, 192, 0.6)',
          'rgba(153, 102, 255, 0.6)',
        ],
        borderWidth: 1
      }]
    };
    
    const packageTypeData = {
      labels: analytics.packageTypes.map(item => item.type),
      datasets: [{
        label: 'Package Types',
        data: analytics.packageTypes.map(item => item.count),
        backgroundColor: [
          'rgba(255, 99, 132, 0.6)',
          'rgba(54, 162, 235, 0.6)',
          'rgba(255, 206, 86, 0.6)',
          'rgba(75, 192, 192, 0.6)',
        ],
        borderWidth: 1
      }]
    };

    return (
      <div className="space-y-6">
        {/* Stats cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-gray-500">Total Revenue</p>
                <h3 className="text-2xl font-bold">${analytics.totalRevenue.toLocaleString()}</h3>
                <p className={`text-sm ${analytics.revenueGrowth >= 0 ? 'text-green-500' : 'text-red-500'}`}>
                  {analytics.revenueGrowth >= 0 ? '+' : ''}{analytics.revenueGrowth}% from last {period}
                </p>
              </div>
              <div className="p-3 bg-blue-100 rounded-full">
                <FaDollarSign className="text-blue-500 text-xl" />
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-gray-500">Total Bookings</p>
                <h3 className="text-2xl font-bold">{analytics.totalBookings}</h3>
                <p className={`text-sm ${analytics.bookingsGrowth >= 0 ? 'text-green-500' : 'text-red-500'}`}>
                  {analytics.bookingsGrowth >= 0 ? '+' : ''}{analytics.bookingsGrowth}% from last {period}
                </p>
              </div>
              <div className="p-3 bg-green-100 rounded-full">
                <FaCalendarCheck className="text-green-500 text-xl" />
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-gray-500">Active Users</p>
                <h3 className="text-2xl font-bold">{analytics.activeUsers}</h3>
                <p className={`text-sm ${analytics.usersGrowth >= 0 ? 'text-green-500' : 'text-red-500'}`}>
                  {analytics.usersGrowth >= 0 ? '+' : ''}{analytics.usersGrowth}% from last {period}
                </p>
              </div>
              <div className="p-3 bg-purple-100 rounded-full">
                <FaUsers className="text-purple-500 text-xl" />
              </div>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-gray-500">Conversion Rate</p>
                <h3 className="text-2xl font-bold">{analytics.conversionRate}%</h3>
                <p className={`text-sm ${analytics.conversionGrowth >= 0 ? 'text-green-500' : 'text-red-500'}`}>
                  {analytics.conversionGrowth >= 0 ? '+' : ''}{analytics.conversionGrowth}% from last {period}
                </p>
              </div>
              <div className="p-3 bg-yellow-100 rounded-full">
                <FaChartLine className="text-yellow-500 text-xl" />
              </div>
            </div>
          </div>
        </div>
        
        {/* Period selector */}
        <div className="flex justify-end">
          <div className="bg-white rounded-lg shadow inline-flex">
            <button 
              onClick={() => setPeriod('week')} 
              className={`px-4 py-2 rounded-l-lg ${period === 'week' ? 'bg-blue-500 text-white' : 'hover:bg-gray-100'}`}
            >
              Week
            </button>
            <button 
              onClick={() => setPeriod('month')} 
              className={`px-4 py-2 ${period === 'month' ? 'bg-blue-500 text-white' : 'hover:bg-gray-100'}`}
            >
              Month
            </button>
            <button 
              onClick={() => setPeriod('year')} 
              className={`px-4 py-2 rounded-r-lg ${period === 'year' ? 'bg-blue-500 text-white' : 'hover:bg-gray-100'}`}
            >
              Year
            </button>
          </div>
        </div>
        
        {/* Charts */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div className="bg-white rounded-lg shadow p-6">
            <h3 className="text-lg font-semibold mb-4">Revenue Over Time</h3>
            <Line data={revenueData} />
          </div>
          
          <div className="bg-white rounded-lg shadow p-6">
            <h3 className="text-lg font-semibold mb-4">Bookings by Destination</h3>
            <Bar data={bookingsData} />
          </div>
        </div>
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="bg-white rounded-lg shadow p-6 lg:col-span-1">
            <h3 className="text-lg font-semibold mb-4">Package Types</h3>
            <Doughnut data={packageTypeData} />
          </div>
          
          <div className="bg-white rounded-lg shadow p-6 lg:col-span-2">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold">Recent Bookings</h3>
              <button className="text-blue-500 hover:underline text-sm">View All</button>
            </div>
            
            <div className="overflow-x-auto">
              <table className="min-w-full">
                <thead>
                  <tr className="bg-gray-50">
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Booking ID</th>
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Package</th>
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                    <th className="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  </tr>
                </thead>
                <tbody className="divide-y divide-gray-200">
                  {analytics.recentBookings.map(booking => (
                    <tr key={booking.id} className="hover:bg-gray-50">
                      <td className="px-4 py-2 whitespace-nowrap">{booking.bookingId}</td>
                      <td className="px-4 py-2 whitespace-nowrap">{booking.customerName}</td>
                      <td className="px-4 py-2 whitespace-nowrap">{booking.packageName}</td>
                      <td className="px-4 py-2 whitespace-nowrap">{new Date(booking.bookingDate).toLocaleDateString()}</td>
                      <td className="px-4 py-2 whitespace-nowrap">${booking.amount.toLocaleString()}</td>
                      <td className="px-4 py-2 whitespace-nowrap">
                        <span className={`px-2 py-1 rounded-full text-xs ${
                          booking.status === 'Confirmed' ? 'bg-green-100 text-green-800' :
                          booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
                          booking.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                          'bg-blue-100 text-blue-800'
                        }`}>
                          {booking.status}
                        </span>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const renderUsersTab = () => {
    const filteredUsers = users ? users.filter(user => 
      user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      user.email.toLowerCase().includes(searchTerm.toLowerCase())
    ) : [];

    return (
      <div className="space-y-6">
        <div className="flex flex-wrap justify-between items-center gap-4">
          <h2 className="text-xl font-bold">User Management</h2>
          
          <div className="flex items-center gap-2">
            <div className="relative">
              <input
                type="text"
                placeholder="Search users..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4 py-2 border rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <FaSearch className="absolute left-3 top-3 text-gray-400" />
            </div>
            
            <button className="p-2 bg-gray-100 rounded-lg hover:bg-gray-200">
              <FaFilter />
            </button>
            
            <button className="p-2 bg-gray-100 rounded-lg hover:bg-gray-200">
              <FaCloudDownloadAlt />
            </button>
          </div>
        </div>
        
        <div className="bg-white rounded-lg shadow overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full">
              <thead>
                <tr className="bg-gray-50">
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {filteredUsers.map(user => (
                  <tr key={user.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="h-10 w-10 rounded-full overflow-hidden bg-gray-100">
                          <img 
                            src={user.profilePicture || '/profile-placeholder.jpg'} 
                            alt={user.name}
                            className="h-full w-full object-cover"
                          />
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-gray-900">{user.name}</div>
                          <div className="text-sm text-gray-500">{user.phone || 'No phone'}</div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{user.email}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{user.role}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 rounded-full text-xs ${
                        user.status === 'active' ? 'bg-green-100 text-green-800' :
                        user.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-red-100 text-red-800'
                      }`}>
                        {user.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{new Date(user.createdAt).toLocaleDateString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex space-x-2">
                        <button className="text-blue-600 hover:text-blue-900" title="View User">
                          <FaEye />
                        </button>
                        <button className="text-green-600 hover:text-green-900" title="Edit User">
                          <FaEdit />
                        </button>
                        <button className="text-red-600 hover:text-red-900" title="Delete User">
                          <FaTrash />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          
          <div className="px-4 py-3 bg-gray-50 text-gray-500 text-sm flex justify-between items-center">
            <div>
              Showing <span className="font-medium">{filteredUsers.length}</span> of <span className="font-medium">{users ? users.length : 0}</span> users
            </div>
            
            <div className="flex space-x-1">
              <button className="px-3 py-1 border rounded hover:bg-gray-100">Previous</button>
              <button className="px-3 py-1 border bg-blue-500 text-white rounded">1</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">2</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">3</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">Next</button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const renderBookingsTab = () => {
    const filteredBookings = bookings ? bookings.filter(booking => {
      const matchesSearch = 
        booking.bookingId.toLowerCase().includes(searchTerm.toLowerCase()) ||
        booking.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||
        booking.packageName.toLowerCase().includes(searchTerm.toLowerCase());
        
      const matchesFilter = filterStatus === 'all' || booking.status.toLowerCase() === filterStatus.toLowerCase();
      
      return matchesSearch && matchesFilter;
    }) : [];

    return (
      <div className="space-y-6">
        <div className="flex flex-wrap justify-between items-center gap-4">
          <h2 className="text-xl font-bold">Booking Management</h2>
          
          <div className="flex items-center gap-2">
            <div className="relative">
              <input
                type="text"
                placeholder="Search bookings..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4 py-2 border rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <FaSearch className="absolute left-3 top-3 text-gray-400" />
            </div>
            
            <select 
              value={filterStatus}
              onChange={(e) => setFilterStatus(e.target.value)}
              className="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">All Status</option>
              <option value="confirmed">Confirmed</option>
              <option value="pending">Pending</option>
              <option value="cancelled">Cancelled</option>
              <option value="completed">Completed</option>
            </select>
            
            <button className="p-2 bg-gray-100 rounded-lg hover:bg-gray-200">
              <FaCloudDownloadAlt />
            </button>
          </div>
        </div>
        
        <div className="bg-white rounded-lg shadow overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full">
              <thead>
                <tr className="bg-gray-50">
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Booking ID</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Customer</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Package</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Travel Date</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200">
                {filteredBookings.map(booking => (
                  <tr key={booking.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-gray-900">{booking.bookingId}</div>
                      <div className="text-xs text-gray-500">{new Date(booking.bookingDate).toLocaleDateString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{booking.customerName}</div>
                      <div className="text-xs text-gray-500">{booking.customerEmail}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{booking.packageName}</div>
                      <div className="text-xs text-gray-500">{booking.destination}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{new Date(booking.departureDate).toLocaleDateString()}</div>
                      <div className="text-xs text-gray-500">to {new Date(booking.returnDate).toLocaleDateString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-gray-900">${booking.amount.toLocaleString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 rounded-full text-xs ${
                        booking.status === 'Confirmed' ? 'bg-green-100 text-green-800' :
                        booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
                        booking.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                        'bg-blue-100 text-blue-800'
                      }`}>
                        {booking.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex space-x-2">
                        <button className="text-blue-600 hover:text-blue-900" title="View Booking">
                          <FaEye />
                        </button>
                        {booking.status === 'Pending' && (
                          <>
                            <button className="text-green-600 hover:text-green-900" title="Confirm Booking">
                              <FaCheck />
                            </button>
                            <button className="text-red-600 hover:text-red-900" title="Reject Booking">
                              <FaTimes />
                            </button>
                          </>
                        )}
                        <button className="text-gray-600 hover:text-gray-900" title="More Options">
                          <FaEllipsisV />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          
          <div className="px-4 py-3 bg-gray-50 text-gray-500 text-sm flex justify-between items-center">
            <div>
              Showing <span className="font-medium">{filteredBookings.length}</span> of <span className="font-medium">{bookings ? bookings.length : 0}</span> bookings
            </div>
            
            <div className="flex space-x-1">
              <button className="px-3 py-1 border rounded hover:bg-gray-100">Previous</button>
              <button className="px-3 py-1 border bg-blue-500 text-white rounded">1</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">2</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">3</button>
              <button className="px-3 py-1 border rounded hover:bg-gray-100">Next</button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const renderPackagesTab = () => {
    const filteredPackages = packages ? packages.filter(pkg => 
      pkg.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      pkg.location.toLowerCase().includes(searchTerm.toLowerCase())
    ) : [];

    return (
      <div className="space-y-6">
        <div className="flex flex-wrap justify-between items-center gap-4">
          <h2 className="text-xl font-bold">Package Management</h2>
          
          <div className="flex items-center gap-2">
            <div className="relative">
              <input
                type="text"
                placeholder="Search packages..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4 py-2 border rounded-lg w-64 focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
              <FaSearch className="absolute left-3 top-3 text-gray-400" />
            </div>
            
            <button className="p-2 bg-gray-100 rounded-lg hover:bg-gray-200">
              <FaFilter />
            </button>
            
            <button className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
              + Add Package
            </button>
          </div>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredPackages.map(pkg => (
            <div key={pkg.id} className="bg-white rounded-lg shadow overflow-hidden">
              <div className="h-40 overflow-hidden">
                <img 
                  src={pkg.imageUrl || '/package-placeholder.jpg'} 
                  alt={pkg.name}
                  className="w-full h-full object-cover"
                />
              </div>
              
              <div className="p-4">
                <div className="flex justify-between items-start">
                  <h3 className="text-lg font-semibold">{pkg.name}</h3>
                  <span className={`px-2 py-1 rounded-full text-xs ${
                    pkg.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                  }`}>
                    {pkg.status}
                  </span>
                </div>
                
                <p className="text-gray-600 text-sm mt-1">{pkg.location}</p>
                
                <div className="flex justify-between items-center mt-3">
                  <div>
                    <p className="text-sm text-gray-500">Price</p>
                    <p className="font-semibold">${pkg.price.toLocaleString()}</p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500">Duration</p>
                    <p className="font-semibold">{pkg.duration} days</p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500">Rating</p>
                    <p className="font-semibold">{pkg.rating} ★</p>
                  </div>
                </div>
                
                <div className="flex justify-end space-x-2 mt-4">
                  <button className="p-2 text-blue-600 hover:bg-blue-50 rounded">
                    <FaEye />
                  </button>
                  <button className="p-2 text-green-600 hover:bg-green-50 rounded">
                    <FaEdit />
                  </button>
                  <button className="p-2 text-red-600 hover:bg-red-50 rounded">
                    <FaTrash />
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
        
        <div className="flex justify-center mt-6">
          <div className="flex space-x-1">
            <button className="px-3 py-1 border rounded hover:bg-gray-100">Previous</button>
            <button className="px-3 py-1 border bg-blue-500 text-white rounded">1</button>
            <button className="px-3 py-1 border rounded hover:bg-gray-100">Previous</button>
            <button className="px-3 py-1 border bg-blue-500 text-white rounded">1</button>
            <button className="px-3 py-1 border rounded hover:bg-gray-100">2</button>
            <button className="px-3 py-1 border rounded hover:bg-gray-100">3</button>
            <button className="px-3 py-1 border rounded hover:bg-gray-100">Next</button>
          </div>
        </div>
      </div>
    );
  };

  const renderSettingsTab = () => {
    return (
      <div className="space-y-6">
        <h2 className="text-xl font-bold">Admin Settings</h2>
        
        <div className="bg-white rounded-lg shadow overflow-hidden">
          <div className="p-6">
            <h3 className="text-lg font-semibold mb-4">General Settings</h3>
            
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Site Name</label>
                <input 
                  type="text" 
                  defaultValue="TravelEase Admin" 
                  className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Admin Email</label>
                <input 
                  type="email" 
                  defaultValue="admin@travelease.com" 
                  className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Timezone</label>
                <select className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option>UTC</option>
                  <option>America/New_York</option>
                  <option>Europe/London</option>
                  <option>Asia/Tokyo</option>
                  <option>Australia/Sydney</option>
                </select>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Currency</label>
                <select className="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option>USD ($)</option>
                  <option>EUR (€)</option>
                  <option>GBP (£)</option>
                  <option>JPY (¥)</option>
                  <option>AUD ($)</option>
                </select>
              </div>
            </div>
          </div>
          
          <div className="p-6 border-t">
            <h3 className="text-lg font-semibold mb-4">Email Notifications</h3>
            
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">New Booking Notifications</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" defaultChecked />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                </label>
              </div>
              
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">User Registration Notifications</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" defaultChecked />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                </label>
              </div>
              
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">Payment Notifications</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" defaultChecked />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                </label>
              </div>
              
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-700">System Updates</span>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input type="checkbox" className="sr-only peer" />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                </label>
              </div>
            </div>
          </div>
          
          <div className="p-6 border-t">
            <h3 className="text-lg font-semibold mb-4">Security Settings</h3>
            
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Two-Factor Authentication</label>
                <div className="flex items-center space-x-3">
                  <label className="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" className="sr-only peer" />
                    <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                  </label>
                  <span className="text-sm text-gray-500">Enable for admin accounts</span>
                </div>
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">Password Requirements</label>
                <div className="space-y-2">
                  <div className="flex items-center">
                    <input type="checkbox" id="minChars" className="mr-2" defaultChecked />
                    <label htmlFor="minChars" className="text-sm text-gray-600">Minimum 8 characters</label>
                  </div>
                  <div className="flex items-center">
                    <input type="checkbox" id="requireUpper" className="mr-2" defaultChecked />
                    <label htmlFor="requireUpper" className="text-sm text-gray-600">Require uppercase letters</label>
                  </div>
                  <div className="flex items-center">
                    <input type="checkbox" id="requireSpecial" className="mr-2" defaultChecked />
                    <label htmlFor="requireSpecial" className="text-sm text-gray-600">Require special characters</label>
                  </div>
                  <div className="flex items-center">
                    <input type="checkbox" id="passwordExpiry" className="mr-2" />
                    <label htmlFor="passwordExpiry" className="text-sm text-gray-600">Password expires every 90 days</label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div className="p-6 border-t flex justify-end space-x-3">
            <button className="px-4 py-2 bg-gray-100 rounded-md hover:bg-gray-200 text-gray-800">
              Cancel
            </button>
            <button className="px-4 py-2 bg-blue-500 rounded-md hover:bg-blue-600 text-white">
              Save Changes
            </button>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-gray-100">
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-gray-900">TravelEase Admin</h1>
          
          <div className="flex items-center space-x-4">
            <button className="p-2 rounded-full hover:bg-gray-100 relative">
              <FaBell className="text-gray-600" />
              <span className="absolute top-0 right-0 inline-flex items-center justify-center w-4 h-4 text-xs font-bold text-white bg-red-500 rounded-full">
                3
              </span>
            </button>
            
            <div className="flex items-center space-x-2">
              <div className="h-10 w-10 rounded-full overflow-hidden bg-gray-200">
                <img 
                  src="/admin-avatar.jpg" 
                  alt="Admin Avatar"
                  className="h-full w-full object-cover"
                />
              </div>
              <div>
                <p className="text-sm font-medium text-gray-700">Admin User</p>
                <p className="text-xs text-gray-500">Super Admin</p>
              </div>
            </div>
          </div>
        </div>
      </header>
      
      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex flex-col lg:flex-row gap-6">
          {/* Sidebar */}
          <div className="w-full lg:w-64">
            <div className="bg-white shadow rounded-lg overflow-hidden">
              <nav className="p-4">
                <ul className="space-y-1">
                  <li>
                    <button
                      onClick={() => setActiveTab('dashboard')}
                      className={`w-full flex items-center px-4 py-2 text-left rounded-md ${
                        activeTab === 'dashboard' 
                          ? 'bg-blue-50 text-blue-700' 
                          : 'text-gray-700 hover:bg-gray-100'
                      }`}
                    >
                      <FaChartLine className="mr-3" />
                      Dashboard
                    </button>
                  </li>
                  <li>
                    <button
                      onClick={() => setActiveTab('users')}
                      className={`w-full flex items-center px-4 py-2 text-left rounded-md ${
                        activeTab === 'users' 
                          ? 'bg-blue-50 text-blue-700' 
                          : 'text-gray-700 hover:bg-gray-100'
                      }`}
                    >
                      <FaUsers className="mr-3" />
                      Users
                    </button>
                  </li>
                  <li>
                    <button
                      onClick={() => setActiveTab('bookings')}
                      className={`w-full flex items-center px-4 py-2 text-left rounded-md ${
                        activeTab === 'bookings' 
                          ? 'bg-blue-50 text-blue-700' 
                          : 'text-gray-700 hover:bg-gray-100'
                      }`}
                    >
                      <FaCalendarCheck className="mr-3" />
                      Bookings
                    </button>
                  </li>
                  <li>
                    <button
                      onClick={() => setActiveTab('packages')}
                      className={`w-full flex items-center px-4 py-2 text-left rounded-md ${
                        activeTab === 'packages' 
                          ? 'bg-blue-50 text-blue-700' 
                          : 'text-gray-700 hover:bg-gray-100'
                      }`}
                    >
                      <FaSuitcase className="mr-3" />
                      Packages
                    </button>
                  </li>
                  <li>
                    <button
                      onClick={() => setActiveTab('settings')}
                      className={`w-full flex items-center px-4 py-2 text-left rounded-md ${
                        activeTab === 'settings' 
                          ? 'bg-blue-50 text-blue-700' 
                          : 'text-gray-700 hover:bg-gray-100'
                      }`}
                    >
                      <FaCog className="mr-3" />
                      Settings
                    </button>
                  </li>
                </ul>
              </nav>
            </div>
            
            {/* Quick Stats */}
            <div className="bg-white shadow rounded-lg overflow-hidden mt-6 p-4">
              <h3 className="font-medium text-sm text-gray-700 mb-3">Quick Stats</h3>
              
              <div className="space-y-3">
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-gray-600">New Users (Today)</span>
                    <span className="font-medium">24</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-blue-500 h-2 rounded-full" style={{ width: '65%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-gray-600">New Bookings (Today)</span>
                    <span className="font-medium">42</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-green-500 h-2 rounded-full" style={{ width: '80%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-1">
                    <span className="text-gray-600">Website Traffic</span>
                    <span className="font-medium">+12%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div className="bg-purple-500 h-2 rounded-full" style={{ width: '45%' }}></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          {/* Content */}
          <div className="flex-1">
            {activeTab === 'dashboard' && renderDashboardTab()}
            {activeTab === 'users' && renderUsersTab()}
            {activeTab === 'bookings' && renderBookingsTab()}
            {activeTab === 'packages' && renderPackagesTab()}
            {activeTab === 'settings' && renderSettingsTab()}
          </div>
        </div>
      </main>
    </div>
  );
};

export default AdminDashboard;
