import React, { useState, useEffect } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import { 
  fetchServiceProviderBookings, 
  fetchServiceProviderPackages, 
  updateBookingStatus 
} from '../redux/actions/serviceProviderActions';
import { FaEdit, FaPlus, FaTrash, FaEye } from 'react-icons/fa';

const ServiceProviderDashboard = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState('bookings');
  
  const { bookings, packages, loading, error } = useSelector(state => state.serviceProvider);
  const { user } = useSelector(state => state.auth);
  
  useEffect(() => {
    if (user && user.role !== 'SERVICE_PROVIDER') {
      navigate('/');
      return;
    }
    
    dispatch(fetchServiceProviderBookings());
    dispatch(fetchServiceProviderPackages());
  }, [dispatch, navigate, user]);
  
  const handleStatusChange = (bookingId, newStatus) => {
    if (window.confirm(`Are you sure you want to mark this booking as ${newStatus}?`)) {
      dispatch(updateBookingStatus(bookingId, newStatus));
    }
  };
  
  const handleAddPackage = () => {
    navigate('/service-provider/packages/new');
  };
  
  const handleEditPackage = (packageId) => {
    navigate(`/service-provider/packages/edit/${packageId}`);
  };
  
  const renderBookingsList = () => {
    if (loading) return <div className="text-center my-5">Loading bookings...</div>;
    if (error) return <div className="text-center my-5 text-red-500">{error}</div>;
    if (!bookings || bookings.length === 0) return <div className="text-center my-5">No bookings found</div>;
    
    return (
      <div className="overflow-x-auto">
        <table className="min-w-full bg-white">
          <thead className="bg-gray-100">
            <tr>
              <th className="py-3 px-4 text-left">ID</th>
              <th className="py-3 px-4 text-left">Customer</th>
              <th className="py-3 px-4 text-left">Package</th>
              <th className="py-3 px-4 text-left">Travel Date</th>
              <th className="py-3 px-4 text-left">People</th>
              <th className="py-3 px-4 text-left">Amount</th>
              <th className="py-3 px-4 text-left">Status</th>
              <th className="py-3 px-4 text-left">Actions</th>
            </tr>
          </thead>
          <tbody>
            {bookings.map(booking => (
              <tr key={booking.id} className="border-b hover:bg-gray-50">
                <td className="py-3 px-4">{booking.id.substring(0, 8)}...</td>
                <td className="py-3 px-4">{booking.user.name}</td>
                <td className="py-3 px-4">{booking.package.title}</td>
                <td className="py-3 px-4">{new Date(booking.travelDate).toLocaleDateString()}</td>
                <td className="py-3 px-4">{booking.numberOfPeople}</td>
                <td className="py-3 px-4">${booking.totalAmount}</td>
                <td className="py-3 px-4">
                  <span className={`px-2 py-1 rounded text-sm font-medium ${
                    booking.status === 'CONFIRMED' ? 'bg-green-100 text-green-800' : 
                    booking.status === 'PENDING' ? 'bg-yellow-100 text-yellow-800' : 
                    booking.status === 'CANCELLED' ? 'bg-red-100 text-red-800' : 
                    'bg-blue-100 text-blue-800'
                  }`}>
                    {booking.status}
                  </span>
                </td>
                <td className="py-3 px-4">
                  <div className="flex space-x-2">
                    <button 
                      onClick={() => navigate(`/bookings/${booking.id}`)} 
                      className="text-blue-500 hover:text-blue-700"
                      title="View Details"
                    >
                      <FaEye />
                    </button>
                    {booking.status === 'PENDING' && (
                      <>
                        <button 
                          onClick={() => handleStatusChange(booking.id, 'CONFIRMED')} 
                          className="text-green-500 hover:text-green-700"
                          title="Confirm Booking"
                        >
                          Confirm
                        </button>
                        <button 
                          onClick={() => handleStatusChange(booking.id, 'CANCELLED')} 
                          className="text-red-500 hover:text-red-700"
                          title="Cancel Booking"
                        >
                          Cancel
                        </button>
                      </>
                    )}
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    );
  };
  
  const renderPackagesList = () => {
    if (loading) return <div className="text-center my-5">Loading packages...</div>;
    if (error) return <div className="text-center my-5 text-red-500">{error}</div>;
    if (!packages || packages.length === 0) return <div className="text-center my-5">No packages found</div>;
    
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {packages.map(pkg => (
          <div key={pkg.id} className="border rounded-lg overflow-hidden shadow-md bg-white">
            <div className="h-48 overflow-hidden">
              <img 
                src={pkg.images[0] || '/placeholder-package.jpg'} 
                alt={pkg.title} 
                className="w-full h-full object-cover"
              />
            </div>
            <div className="p-4">
              <div className="flex justify-between items-start mb-2">
                <h3 className="text-lg font-bold">{pkg.title}</h3>
                <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">
                  ${pkg.price}
                </span>
              </div>
              <p className="text-gray-600 text-sm mb-4 line-clamp-2">{pkg.description}</p>
              <div className="flex justify-between items-center">
                <span className="text-sm text-gray-500">
                  {pkg.bookings ? `${pkg.bookings.length} bookings` : '0 bookings'}
                </span>
                <div className="flex space-x-2">
                  <button 
                    onClick={() => handleEditPackage(pkg.id)}
                    className="text-blue-500 hover:text-blue-700"
                    title="Edit Package"
                  >
                    <FaEdit />
                  </button>
                  <button 
                    onClick={() => navigate(`/packages/${pkg.id}`)}
                    className="text-green-500 hover:text-green-700"
                    title="View Package"
                  >
                    <FaEye />
                  </button>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    );
  };
  
  const renderDashboardStats = () => {
    const totalBookings = bookings ? bookings.length : 0;
    const confirmedBookings = bookings ? bookings.filter(b => b.status === 'CONFIRMED').length : 0;
    const pendingBookings = bookings ? bookings.filter(b => b.status === 'PENDING').length : 0;
    const totalPackages = packages ? packages.length : 0;
    
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="text-xl font-bold text-blue-600">{totalBookings}</div>
          <div className="text-gray-500">Total Bookings</div>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="text-xl font-bold text-green-600">{confirmedBookings}</div>
          <div className="text-gray-500">Confirmed Bookings</div>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="text-xl font-bold text-yellow-600">{pendingBookings}</div>
          <div className="text-gray-500">Pending Bookings</div>
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="text-xl font-bold text-purple-600">{totalPackages}</div>
          <div className="text-gray-500">Total Packages</div>
        </div>
      </div>
    );
  };
  
  return (
    <div className="container mx-auto px-4 py-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">Service Provider Dashboard</h1>
        {activeTab === 'packages' && (
          <button 
            onClick={handleAddPackage}
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center"
          >
            <FaPlus className="mr-2" /> Add New Package
          </button>
        )}
      </div>
      
      {renderDashboardStats()}
      
      <div className="mb-6 border-b">
        <div className="flex space-x-6">
          <button
            className={`py-2 px-1 -mb-px font-medium ${
              activeTab === 'bookings' 
                ? 'text-blue-600 border-b-2 border-blue-600' 
                : 'text-gray-500 hover:text-gray-700'
            }`}
            onClick={() => setActiveTab('bookings')}
          >
            Bookings
          </button>
          <button
            className={`py-2 px-1 -mb-px font-medium ${
              activeTab === 'packages' 
                ? 'text-blue-600 border-b-2 border-blue-600' 
                : 'text-gray-500 hover:text-gray-700'
            }`}
            onClick={() => setActiveTab('packages')}
          >
            Packages
          </button>
        </div>
      </div>
      
      {activeTab === 'bookings' ? renderBookingsList() : renderPackagesList()}
    </div>
  );
};

export default ServiceProviderDashboard;
