{"version":3,"sources":["firebaseConfig.ts","contexts/AuthContext.tsx","services/authService.ts","App.tsx","index.tsx"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","auth","getAuth","db","getFirestore","AuthContext","createContext","undefined","AuthProvider","_ref","children","user","setUser","useState","useEffect","unsubscribe","onAuthStateChanged","_jsx","Provider","value","login","async","email","password","authService","register","firstname","lastname","logout","useAuth","context","useContext","Error","createUserWithEmailAndPassword","error","console","signInWithEmailAndPassword","signOut","getToken","currentUser","getIdToken","Login","React","lazy","Register","Dashboard","PackageList","PackageDetails","ProtectedRoute","_Fragment","Navigate","to","replace","App","Router","Suspense","fallback","_jsxs","Routes","Route","path","element","rootElement","document","getElementById","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.2eb93b8f.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  // Add other config properties if available\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Authentication\r\nexport const auth = getAuth(app);\r\n\r\n// Firestore\r\nexport const db = getFirestore(app);\r\n\r\nexport default app;","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { User } from 'firebase/auth';\r\nimport { auth } from '../firebaseConfig';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string, firstname: string, lastname: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(setUser);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    await authService.login(email, password);\r\n  };\r\n\r\n  const register = async (email: string, password: string ,firstname: string, lastname: string) => {\r\n    await authService.register(email, password,firstname, lastname);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await authService.logout();\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};","import { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  User\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nexport const authService = {\r\n  async register(email: string, password: string ,firstname: string, lastname: string) {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async logout() {\r\n    try {\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Logout error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Add getToken method\r\n  async getToken() {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        return await currentUser.getIdToken();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error getting token', error);\r\n      throw error;\r\n    }\r\n  }\r\n};","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { useAuth } from './contexts/AuthContext';\r\n\r\n// Import your components\r\nconst Login = React.lazy(() => import('./components/Auth/Login'));\r\nconst Register = React.lazy(() => import('./components/Auth/Register'));\r\nconst Dashboard = React.lazy(() => import('./components/Dashboard/UserDashboard'));\r\nconst PackageList = React.lazy(() => import('./components/Packages/PackageList'));\r\nconst PackageDetails = React.lazy(() => import('./components/Packages/PackageDetails'));\r\n\r\n// Protected Route Component\r\nconst ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { user } = useAuth();\r\n  return user ? <>{children}</> : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Routes>\r\n            {/* Authentication Routes */}\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/register\" element={<Register />} />\r\n            \r\n            {/* Protected Routes */}\r\n            <Route\r\n              path=\"/dashboard\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <Dashboard />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/packages\"\r\n              element={<PackageList />}\r\n            />\r\n            <Route\r\n              path=\"/packages/:id\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <PackageDetails />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            \r\n            {/* Default Redirect */}\r\n            <Route path=\"/\" element={<Navigate to=\"/packages\" replace />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';  // Change this line\r\n\r\nconst rootElement = document.getElementById('root');\r\nif (rootElement) {\r\n  const root = ReactDOM.createRoot(rootElement);\r\n  root.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  );\r\n}\r\n"],"sourceRoot":""}