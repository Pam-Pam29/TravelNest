{"version":3,"sources":["components/Auth/Register.tsx"],"names":["Register","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","error","setError","register","useAuth","navigate","useNavigate","_jsx","className","children","_jsxs","Link","to","onSubmit","async","e","preventDefault","err","console","id","name","type","required","placeholder","value","onChange","target","htmlFor","autoComplete"],"mappings":"+HAAA,gDA6IeA,UAzIYA,KACzB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAiBC,GAAsBJ,mBAAS,KAChDK,EAAWC,GAAgBN,mBAAS,KACpCO,EAAUC,GAAeR,mBAAS,KAClCS,EAAOC,GAAYV,mBAAS,KAC7B,SAAEW,GAAaC,cACfC,EAAWC,cAqBjB,OACEC,cAAA,OAAKC,UAAU,sFAAqFC,SAClGC,eAAA,OAAKF,UAAU,4BAA2BC,SAAA,CACxCC,eAAA,OAAAD,SAAA,CACEF,cAAA,MAAIC,UAAU,yDAAwDC,SAAC,kCAGvEC,eAAA,KAAGF,UAAU,yCAAwCC,SAAA,CAAC,KACjD,IACHF,cAACI,IAAI,CAACC,GAAG,SAASJ,UAAU,gDAA+CC,SAAC,2CAKhFC,eAAA,QAAMF,UAAU,iBAAiBK,SAjClBC,UAKnB,GAJAC,EAAEC,iBACFd,EAAS,IAGLT,IAAaE,EAKjB,UACQQ,EAASb,EAAOG,EAAUI,EAAWE,GAC3CM,EAAS,aACX,CAAE,MAAOY,GACPf,EAAS,0CACTgB,QAAQjB,MAAMgB,EAChB,MAVEf,EAAS,yBAUX,EAiB4DO,SAAA,CACtDC,eAAA,OAAKF,UAAU,iCAAgCC,SAAA,CAC7CC,eAAA,OAAKF,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,SACEY,GAAG,aACHC,KAAK,YACLC,KAAK,OACLC,UAAQ,EACRd,UAAU,iNACVe,YAAY,aACZC,MAAO3B,EACP4B,SAAWV,GAAMjB,EAAaiB,EAAEW,OAAOF,SAEzCjB,cAAA,SACEY,GAAG,YACHC,KAAK,WACLC,KAAK,OACLC,UAAQ,EACRd,UAAU,iNACVe,YAAY,YACZC,MAAOzB,EACP0B,SAAWV,GAAMf,EAAYe,EAAEW,OAAOF,YAG1Cd,eAAA,OAAAD,SAAA,CACEF,cAAA,SAAOoB,QAAQ,gBAAgBnB,UAAU,UAASC,SAAC,kBAGnDF,cAAA,SACEY,GAAG,gBACHC,KAAK,QACLC,KAAK,QACLO,aAAa,QACbN,UAAQ,EACRd,UAAU,yNACVe,YAAY,gBACZC,MAAOlC,EACPmC,SAAWV,GAAMxB,EAASwB,EAAEW,OAAOF,YAGvCd,eAAA,OAAAD,SAAA,CACEF,cAAA,SAAOoB,QAAQ,WAAWnB,UAAU,UAASC,SAAC,aAG9CF,cAAA,SACEY,GAAG,WACHC,KAAK,WACLC,KAAK,WACLO,aAAa,eACbN,UAAQ,EACRd,UAAU,4MACVe,YAAY,WACZC,MAAO/B,EACPgC,SAAWV,GAAMrB,EAAYqB,EAAEW,OAAOF,YAG1Cd,eAAA,OAAAD,SAAA,CACEF,cAAA,SAAOoB,QAAQ,mBAAmBnB,UAAU,UAASC,SAAC,qBAGtDF,cAAA,SACEY,GAAG,mBACHC,KAAK,kBACLC,KAAK,WACLO,aAAa,eACbN,UAAQ,EACRd,UAAU,yNACVe,YAAY,mBACZC,MAAO7B,EACP8B,SAAWV,GAAMnB,EAAmBmB,EAAEW,OAAOF,eAKlDvB,GACCM,cAAA,OAAKC,UAAU,mCAAkCC,SAC9CR,IAILM,cAAA,OAAAE,SACEF,cAAA,UACEc,KAAK,SACLb,UAAU,gOAA+NC,SAC1O,sBAMH,C","file":"static/js/7.efd10e8c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst Register: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    // Basic validation\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await register(email, password, firstName, lastName);\r\n      navigate('/dashboard');\r\n    } catch (err) {\r\n      setError('Registration failed. Please try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Create Your Travenest Account\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Or{' '}\r\n            <Link to=\"/login\" className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n              sign in to your existing account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div className=\"rounded-md shadow-sm space-y-2\">\r\n            <div className=\"flex space-x-2\">\r\n              <input\r\n                id=\"first-name\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                required\r\n                className=\"appearance-none rounded relative block w-1/2 px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"First Name\"\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n              <input\r\n                id=\"last-name\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                required\r\n                className=\"appearance-none rounded relative block w-1/2 px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Last Name\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                id=\"confirm-password\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                autoComplete=\"new-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm text-center\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}