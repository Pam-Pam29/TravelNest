{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pampam\\\\TravelNest\\\\TravelNest\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(authService.getCurrentUser());\n  const login = async (email, password) => {\n    const loggedInUser = await authService.login({\n      email,\n      password\n    });\n    setUser(loggedInUser);\n  };\n  const register = async (email, password, firstName, lastName) => {\n    const registeredUser = await authService.register({\n      email,\n      password,\n      firstName,\n      lastName\n    });\n    setUser(registeredUser);\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bxcTf6dBL6hsrlg50uHGYc+sOwc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","getCurrentUser","login","email","password","loggedInUser","register","firstName","lastName","registeredUser","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\nimport { User } from '../types/User';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string, firstName?: string, lastName?: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(authService.getCurrentUser());\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const loggedInUser = await authService.login({ email, password });\r\n    setUser(loggedInUser);\r\n  };\r\n\r\n  const register = async (\r\n    email: string, \r\n    password: string, \r\n    firstName?: string, \r\n    lastName?: string\r\n  ) => {\r\n    const registeredUser = await authService.register({\r\n      email, \r\n      password, \r\n      firstName, \r\n      lastName\r\n    });\r\n    setUser(registeredUser);\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAE7E,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAStD,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAcE,WAAW,CAACU,cAAc,CAAC,CAAC,CAAC;EAE3E,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMC,YAAY,GAAG,MAAMd,WAAW,CAACW,KAAK,CAAC;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACjEJ,OAAO,CAACK,YAAY,CAAC;EACvB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CACfH,KAAa,EACbC,QAAgB,EAChBG,SAAkB,EAClBC,QAAiB,KACd;IACH,MAAMC,cAAc,GAAG,MAAMlB,WAAW,CAACe,QAAQ,CAAC;MAChDH,KAAK;MACLC,QAAQ;MACRG,SAAS;MACTC;IACF,CAAC,CAAC;IACFR,OAAO,CAACS,cAAc,CAAC;EACzB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBnB,WAAW,CAACmB,MAAM,CAAC,CAAC;IACpBV,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEG,KAAK;MAAEI,QAAQ;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAC5DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAjCWF,YAA+C;AAAAqB,EAAA,GAA/CrB,YAA+C;AAmC5D,OAAO,MAAMsB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG9B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI0B,OAAO,KAAKzB,SAAS,EAAE;IACzB,MAAM,IAAI0B,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}