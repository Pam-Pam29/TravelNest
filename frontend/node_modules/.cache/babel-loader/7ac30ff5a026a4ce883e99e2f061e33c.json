{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';export const authService={async login(credentials){const response=await axios.post(`${API_URL}/Auth/login, credentials`);if(response.data.token){localStorage.setItem('user',JSON.stringify(response.data.user));localStorage.setItem('token',response.data.token);}return response.data.user;},async register(credentials){const response=await axios.post(`${API_URL}/auth/register, credentials`);if(response.data.token){localStorage.setItem('user',JSON.stringify(response.data.user));localStorage.setItem('token',response.data.token);}return response.data.user;},logout(){localStorage.removeItem('user');localStorage.removeItem('token');},getCurrentUser(){const userStr=localStorage.getItem('user');return userStr?JSON.parse(userStr):null;},getToken(){return localStorage.getItem('token');}};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","authService","login","credentials","response","post","data","token","localStorage","setItem","JSON","stringify","user","register","logout","removeItem","getCurrentUser","userStr","getItem","parse","getToken"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { User } from '../types/User';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport interface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterCredentials extends LoginCredentials {\r\n  firstName?: string;\r\n  lastName?: string;\r\n}\r\n\r\nexport const authService = {\r\n  async login(credentials: LoginCredentials) {\r\n    const response = await axios.post(`${API_URL}/Auth/login, credentials`);\r\n    if (response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data.user;\r\n  },\r\n  \r\n  async register(credentials: RegisterCredentials) {\r\n    const response = await axios.post(`${API_URL}/auth/register, credentials`);\r\n    if (response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n    return response.data.user;\r\n  },\r\n  \r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  },\r\n  \r\n  getCurrentUser(): User | null {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n  },\r\n  \r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAY5E,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB,KAAM,CAAAC,KAAKA,CAACC,WAA6B,CAAE,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,0BAA0B,CAAC,CACvE,GAAIO,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CAChEJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CAACM,IAAI,CAC3B,CAAC,CAED,KAAM,CAAAC,QAAQA,CAACV,WAAgC,CAAE,CAC/C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,6BAA6B,CAAC,CAC1E,GAAIO,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CAChEJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CAACM,IAAI,CAC3B,CAAC,CAEDE,MAAMA,CAAA,CAAG,CACPN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CAC/BP,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAEDC,cAAcA,CAAA,CAAgB,CAC5B,KAAM,CAAAC,OAAO,CAAGT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAC5C,MAAO,CAAAD,OAAO,CAAGP,IAAI,CAACS,KAAK,CAACF,OAAO,CAAC,CAAG,IAAI,CAC7C,CAAC,CAEDG,QAAQA,CAAA,CAAkB,CACxB,MAAO,CAAAZ,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC,CACtC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}