{"ast":null,"code":"import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut// eslint-disable-next-line @typescript-eslint/no-unused-vars\n}from'firebase/auth';import{auth}from'../firebaseConfig';export const authService={async register(email,password,firstname,lastname){try{const userCredential=await createUserWithEmailAndPassword(auth,email,password);return userCredential.user;}catch(error){console.error('Registration error',error);throw error;}},async login(email,password){try{const userCredential=await signInWithEmailAndPassword(auth,email,password);return userCredential.user;}catch(error){console.error('Login error',error);throw error;}},async logout(){try{await signOut(auth);}catch(error){console.error('Logout error',error);throw error;}},// Add getToken method\nasync getToken(){try{const currentUser=auth.currentUser;if(currentUser){return await currentUser.getIdToken();}return null;}catch(error){console.error('Error getting token',error);throw error;}}};","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","auth","authService","register","email","password","firstname","lastname","userCredential","user","error","console","login","logout","getToken","currentUser","getIdToken"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/services/authService.ts"],"sourcesContent":["import { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  User\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nexport const authService = {\r\n  async register(email: string, password: string ,firstname: string, lastname: string) {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      console.error('Registration error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      return userCredential.user;\r\n    } catch (error) {\r\n      console.error('Login error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async logout() {\r\n    try {\r\n      await signOut(auth);\r\n    } catch (error) {\r\n      console.error('Logout error', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Add getToken method\r\n  async getToken() {\r\n    try {\r\n      const currentUser = auth.currentUser;\r\n      if (currentUser) {\r\n        return await currentUser.getIdToken();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error getting token', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,OACEA,8BAA8B,CAC9BC,0BAA0B,CAC1BC,OACA;AAAA,KAEK,eAAe,CACtB,OAASC,IAAI,KAAQ,mBAAmB,CAExC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB,KAAM,CAAAC,QAAQA,CAACC,KAAa,CAAEC,QAAgB,CAAEC,SAAiB,CAAEC,QAAgB,CAAE,CACnF,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAV,8BAA8B,CAACG,IAAI,CAAEG,KAAK,CAAEC,QAAQ,CAAC,CAClF,MAAO,CAAAG,cAAc,CAACC,IAAI,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAE,KAAKA,CAACR,KAAa,CAAEC,QAAgB,CAAE,CAC3C,GAAI,CACF,KAAM,CAAAG,cAAc,CAAG,KAAM,CAAAT,0BAA0B,CAACE,IAAI,CAAEG,KAAK,CAAEC,QAAQ,CAAC,CAC9E,MAAO,CAAAG,cAAc,CAACC,IAAI,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,aAAa,CAAEA,KAAK,CAAC,CACnC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAG,MAAMA,CAAA,CAAG,CACb,GAAI,CACF,KAAM,CAAAb,OAAO,CAACC,IAAI,CAAC,CACrB,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAI,QAAQA,CAAA,CAAG,CACf,GAAI,CACF,KAAM,CAAAC,WAAW,CAAGd,IAAI,CAACc,WAAW,CACpC,GAAIA,WAAW,CAAE,CACf,MAAO,MAAM,CAAAA,WAAW,CAACC,UAAU,CAAC,CAAC,CACvC,CACA,MAAO,KAAI,CACb,CAAE,MAAON,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}