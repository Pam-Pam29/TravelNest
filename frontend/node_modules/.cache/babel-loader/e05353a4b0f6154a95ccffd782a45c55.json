{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(authService.getCurrentUser());const login=async(email,password)=>{const loggedInUser=await authService.login({email,password});setUser(loggedInUser);};const register=async(email,password,firstName,lastName)=>{const registeredUser=await authService.register({email,password,firstName,lastName});setUser(registeredUser);};const logout=()=>{authService.logout();setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,register,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","authService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","getCurrentUser","login","email","password","loggedInUser","register","firstName","lastName","registeredUser","logout","Provider","value","useAuth","context","Error"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\nimport { User } from '../types/User';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string, firstName?: string, lastName?: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(authService.getCurrentUser());\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const loggedInUser = await authService.login({ email, password });\r\n    setUser(loggedInUser);\r\n  };\r\n\r\n  const register = async (\r\n    email: string, \r\n    password: string, \r\n    firstName?: string, \r\n    lastName?: string\r\n  ) => {\r\n    const registeredUser = await authService.register({\r\n      email, \r\n      password, \r\n      firstName, \r\n      lastName\r\n    });\r\n    setUser(registeredUser);\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAmB,OAAO,CAE7E,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAStD,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1E,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAcE,WAAW,CAACU,cAAc,CAAC,CAAC,CAAC,CAE3E,KAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACvD,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAd,WAAW,CAACW,KAAK,CAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CACjEJ,OAAO,CAACK,YAAY,CAAC,CACvB,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CACfH,KAAa,CACbC,QAAgB,CAChBG,SAAkB,CAClBC,QAAiB,GACd,CACH,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAlB,WAAW,CAACe,QAAQ,CAAC,CAChDH,KAAK,CACLC,QAAQ,CACRG,SAAS,CACTC,QACF,CAAC,CAAC,CACFR,OAAO,CAACS,cAAc,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBnB,WAAW,CAACmB,MAAM,CAAC,CAAC,CACpBV,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEP,IAAA,CAACC,WAAW,CAACiB,QAAQ,EAACC,KAAK,CAAE,CAAEb,IAAI,CAAEG,KAAK,CAAEI,QAAQ,CAAEI,MAAO,CAAE,CAAAZ,QAAA,CAC5DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAe,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGxB,UAAU,CAACI,WAAW,CAAC,CACvC,GAAIoB,OAAO,GAAKnB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAoB,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}