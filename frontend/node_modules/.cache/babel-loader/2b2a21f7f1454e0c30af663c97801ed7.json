{"ast":null,"code":"import React,{useState,useEffect}from'react';import{collection,addDoc,getDocs,doc,getDoc,query,where}from'firebase/firestore';import{db}from'../../firebaseConfig';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Define the service outside of the component\nexport const packageService={async getAllPackages(filters){try{const packagesCollection=collection(db,'packages');// Build query based on filters\nlet q=query(packagesCollection);if(filters){if(filters.minPrice!==undefined){q=query(q,where('price','>=',filters.minPrice));}if(filters.maxPrice!==undefined){q=query(q,where('price','<=',filters.maxPrice));}if(filters.destination){q=query(q,where('destinations','array-contains',filters.destination));}}const packagesSnapshot=await getDocs(q);return packagesSnapshot.docs.map(docSnapshot=>{const data=docSnapshot.data();return{_id:docSnapshot.id,title:data.title||'',description:data.description||'',price:data.price||0,duration:data.duration||0,destinations:data.destinations||[],availability:data.availability||0,images:data.images||[],includedServices:data.includedServices||[]};});}catch(error){console.error('Error fetching packages',error);throw error;}},// Keep the other methods from your original code\nasync getPackageById(id){// Your existing code\ntry{const packageDoc=doc(db,'packages',id);const packageSnapshot=await getDoc(packageDoc);if(!packageSnapshot.exists()){throw new Error('Package not found');}const data=packageSnapshot.data();return{_id:packageSnapshot.id,title:data.title||'',description:data.description||'',price:data.price||0,duration:data.duration||0,destinations:data.destinations||[],availability:data.availability||0,images:data.images||[],includedServices:data.includedServices||[]};}catch(error){console.error('Error fetching package',error);throw error;}},async createPackage(packageData){// Your existing code\ntry{const docRef=await addDoc(collection(db,'packages'),{title:packageData.title,description:packageData.description,price:packageData.price,duration:packageData.duration,destinations:packageData.destinations,availability:packageData.availability,images:packageData.images,includedServices:packageData.includedServices});return docRef.id;}catch(error){console.error('Error creating package',error);throw error;}}};const PackageList=()=>{const[packages,setPackages]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchPackages=async()=>{try{const packagesData=await packageService.getAllPackages();setPackages(packagesData);setLoading(false);}catch(err){setError('Failed to fetch packages');setLoading(false);console.error(err);}};fetchPackages();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading packages...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"package-list-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Available Travel Packages\"}),packages.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No packages available at the moment.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"package-grid\",children:packages.map(pkg=>/*#__PURE__*/_jsxs(\"div\",{className:\"package-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:pkg.title}),/*#__PURE__*/_jsx(\"p\",{children:pkg.description}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Price: $\",pkg.price]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Duration: \",pkg.duration,\" days\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Availability: \",pkg.availability,\" spots left\"]}),/*#__PURE__*/_jsx(\"button\",{children:\"View Details\"})]},pkg._id))})]});};export default PackageList;","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","getDocs","doc","getDoc","query","where","db","jsx","_jsx","jsxs","_jsxs","packageService","getAllPackages","filters","packagesCollection","q","minPrice","undefined","maxPrice","destination","packagesSnapshot","docs","map","docSnapshot","data","_id","id","title","description","price","duration","destinations","availability","images","includedServices","error","console","getPackageById","packageDoc","packageSnapshot","exists","Error","createPackage","packageData","docRef","PackageList","packages","setPackages","loading","setLoading","setError","fetchPackages","packagesData","err","children","className","length","pkg"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/components/Packages/PackageList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  collection, \r\n  addDoc,\r\n  getDocs, \r\n  doc,\r\n  getDoc,\r\n  query,\r\n\r\n  where\r\n} from 'firebase/firestore';\r\nimport { db } from '../../firebaseConfig';\r\nimport { Package } from '../../types/Package';\r\n\r\ninterface PackageFilters {\r\n  minPrice?: number;\r\n  maxPrice?: number;\r\n  destination?: string;\r\n}\r\n\r\n// Define the service outside of the component\r\nexport const packageService = {\r\n  async getAllPackages(filters?: PackageFilters): Promise<Package[]> {\r\n    try {\r\n      const packagesCollection = collection(db, 'packages');\r\n      \r\n      // Build query based on filters\r\n      let q = query(packagesCollection);\r\n      \r\n      if (filters) {\r\n        if (filters.minPrice !== undefined) {\r\n          q = query(q, where('price', '>=', filters.minPrice));\r\n        }\r\n        \r\n        if (filters.maxPrice !== undefined) {\r\n          q = query(q, where('price', '<=', filters.maxPrice));\r\n        }\r\n        \r\n        if (filters.destination) {\r\n          q = query(q, where('destinations', 'array-contains', filters.destination));\r\n        }\r\n      }\r\n\r\n      const packagesSnapshot = await getDocs(q);\r\n      \r\n      return packagesSnapshot.docs.map(docSnapshot => {\r\n        const data = docSnapshot.data();\r\n        return {\r\n          _id: docSnapshot.id,\r\n          title: data.title || '',\r\n          description: data.description || '',\r\n          price: data.price || 0,\r\n          duration: data.duration || 0,\r\n          destinations: data.destinations || [],\r\n          availability: data.availability || 0,\r\n          images: data.images || [],\r\n          includedServices: data.includedServices || []\r\n        } as Package;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching packages', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Keep the other methods from your original code\r\n  async getPackageById(id: string): Promise<Package> {\r\n    // Your existing code\r\n    try {\r\n      const packageDoc = doc(db, 'packages', id);\r\n      const packageSnapshot = await getDoc(packageDoc);\r\n      \r\n      if (!packageSnapshot.exists()) {\r\n        throw new Error('Package not found');\r\n      }\r\n\r\n      const data = packageSnapshot.data();\r\n      return {\r\n        _id: packageSnapshot.id,\r\n        title: data.title || '',\r\n        description: data.description || '',\r\n        price: data.price || 0,\r\n        duration: data.duration || 0,\r\n        destinations: data.destinations || [],\r\n        availability: data.availability || 0,\r\n        images: data.images || [],\r\n        includedServices: data.includedServices || []\r\n      } as Package;\r\n    } catch (error) {\r\n      console.error('Error fetching package', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async createPackage(packageData: Package): Promise<string> {\r\n    // Your existing code\r\n    try {\r\n      const docRef = await addDoc(collection(db, 'packages'), {\r\n        title: packageData.title,\r\n        description: packageData.description,\r\n        price: packageData.price,\r\n        duration: packageData.duration,\r\n        destinations: packageData.destinations,\r\n        availability: packageData.availability,\r\n        images: packageData.images,\r\n        includedServices: packageData.includedServices\r\n      });\r\n      return docRef.id;\r\n    } catch (error) {\r\n      console.error('Error creating package', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nconst PackageList: React.FC = () => {\r\n  const [packages, setPackages] = useState<Package[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPackages = async () => {\r\n      try {\r\n        const packagesData = await packageService.getAllPackages();\r\n        setPackages(packagesData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to fetch packages');\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchPackages();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading packages...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"package-list-container\">\r\n      <h1>Available Travel Packages</h1>\r\n      {packages.length === 0 ? (\r\n        <p>No packages available at the moment.</p>\r\n      ) : (\r\n        <div className=\"package-grid\">\r\n          {packages.map((pkg) => (\r\n            <div key={pkg._id} className=\"package-card\">\r\n              <h3>{pkg.title}</h3>\r\n              <p>{pkg.description}</p>\r\n              <p>Price: ${pkg.price}</p>\r\n              <p>Duration: {pkg.duration} days</p>\r\n              <p>Availability: {pkg.availability} spots left</p>\r\n              <button>View Details</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}