{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{auth}from'../firebaseConfig';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const unsubscribe=auth.onAuthStateChanged(setUser);return()=>unsubscribe();},[]);const login=async(email,password)=>{await authService.login(email,password);};const register=async(email,password,firstname,lastname)=>{await authService.register(email,password,firstname,lastname);};const logout=async()=>{await authService.logout();};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,register,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","auth","authService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","unsubscribe","onAuthStateChanged","login","email","password","register","firstname","lastname","logout","Provider","value","useAuth","context","Error"],"sources":["C:/Users/pampam/TravelNest/TravelNest/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { User } from 'firebase/auth';\r\nimport { auth } from '../firebaseConfig';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string, firstname: string, lastname: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(setUser);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    await authService.login(email, password);\r\n  };\r\n\r\n  const register = async (email: string, password: string ,firstname: string, lastname: string) => {\r\n    await authService.register(email, password,firstname, lastname);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await authService.logout();\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAE7E,OAASC,IAAI,KAAQ,mBAAmB,CACxC,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAStD,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAA8BS,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CAEnDE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,WAAW,CAAGX,IAAI,CAACY,kBAAkB,CAACF,OAAO,CAAC,CACpD,MAAO,IAAMC,WAAW,CAAC,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACvD,KAAM,CAAAd,WAAW,CAACY,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOF,KAAa,CAAEC,QAAgB,CAAEE,SAAiB,CAAEC,QAAgB,GAAK,CAC/F,KAAM,CAAAjB,WAAW,CAACe,QAAQ,CAACF,KAAK,CAAEC,QAAQ,CAACE,SAAS,CAAEC,QAAQ,CAAC,CACjE,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAlB,WAAW,CAACkB,MAAM,CAAC,CAAC,CAC5B,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEZ,IAAI,CAAEI,KAAK,CAAEG,QAAQ,CAAEG,MAAO,CAAE,CAAAX,QAAA,CAC5DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAc,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACM,WAAW,CAAC,CACvC,GAAImB,OAAO,GAAKlB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAmB,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}